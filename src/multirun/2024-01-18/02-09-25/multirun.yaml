hydra:
  run:
    dir: outputs/assimilate/${dataset.name}/${encoder_decoder.model_name}-${encoder_decoder.cfg_name}/${now:%Y%m%d-%H%M%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      colorlog:
        (): colorlog.ColoredFormatter
        format: '[%(cyan)s%(asctime)s%(reset)s][%(purple)sHYDRA%(reset)s] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: colorlog
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
      colorlog:
        (): colorlog.ColoredFormatter
        format: '[%(cyan)s%(asctime)s%(reset)s][%(blue)s%(name)s%(reset)s][%(log_color)s%(levelname)s%(reset)s]
          - %(message)s'
        log_colors:
          DEBUG: purple
          INFO: green
          WARNING: yellow
          ERROR: red
          CRITICAL: red
    handlers:
      console:
        class: logging.StreamHandler
        formatter: colorlog
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=MULTIRUN
    task:
    - infl=1.02,1.05,1.1
    - ens_num=32,64
    - encoder_decoder=default_sinr_v11
    - latent_dynamics=ablation/neuralode/no_exp
    - uncertainty_est=ablation/cholesky/reg1
  job:
    name: assimilate_main
    chdir: null
    override_dirname: encoder_decoder=default_sinr_v11,ens_num=32,64,infl=1.02,1.05,1.1,latent_dynamics=ablation/neuralode/no_exp,uncertainty_est=ablation/cholesky/reg1
    id: ???
    num: ???
    config_name: config
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.2'
    cwd: /home/lizhuoyuan/MyProject/LAINR-simplified/src
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/lizhuoyuan/MyProject/LAINR-simplified/src/configs/assimilate
      schema: file
      provider: main
    - path: hydra_plugins.hydra_colorlog.conf
      schema: pkg
      provider: hydra-colorlog
    - path: ''
      schema: structured
      provider: schema
    output_dir: ???
    choices:
      uncertainty_est: ablation/cholesky/reg1
      latent_dynamics: ablation/neuralode/no_exp
      encoder_decoder: default_sinr_v11
      dataset: sw
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: colorlog
      hydra/hydra_logging: colorlog
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
name: ${dataset.name}_${encoder_decoder.name}_${latent_dynamics.name}_${uncertainty_est.name}
finetune_name: ${dataset.name}_${encoder_decoder.name}_${latent_dynamics.name}
postproc_name: ${dataset.name}_${encoder_decoder.name}_${latent_dynamics.name}_${uncertainty_est.name}
seed: 2357
cuda_id: 0
finetune_ckpt_path: ../ckpts/finetune/${finetune_name}.pt
postproc_ckpt_path: ../ckpts/postproc/${postproc_name}.pt
ass_nsteps: 200
sigma_x_b: 0.1
sigma_z_b: null
sigma_m: null
sigma_o: 0.1
n_obs: 1024
ens_num: 32
infl: 1.05
offgrid: false
dataset:
  name: sw
  root_path: /home/lizhuoyuan/datasets/shallow_water
  snapshot_shape:
  - 128
  - 64
  - 2
  read_cache: true
  normalize: true
  normalize_mean: null
  normalize_std: null
  window_width: 10
encoder_decoder:
  model_name: SINRv11
  cfg_name: default
  name: ${encoder_decoder.model_name}_${encoder_decoder.cfg_name}
  latent_dim: 400
  need_train: true
  need_cache: true
  arch_params:
    hidden_channels: null
    latent_channels: null
    kernel_size: null
    padding_type: null
    nresblocks: null
    state_size: null
    state_channels: 2
    coord_channels: 2
    code_dim: 200
    hidden_dim: 128
    depth: 8
    max_freq: 8
    inner_loop_loss_fn: weighted
    inner_loop_lr: 0.01
    inner_loop_max_iters: 1000
    inner_loop_max_patience: 10
  training_params:
    bs: 3
    lr_ed: 0.005
    lr_cd: 0.01
    loss_fn_tr: weighted
    loss_fn_va: weighted_root
latent_dynamics:
  model_name: NeuralODE
  cfg_name: no_exp
  name: ${latent_dynamics.model_name}_${latent_dynamics.cfg_name}
  latent_dim: ???
  need_train: true
  need_cache: true
  arch_params:
    hidden_dim: 800
    nlayers: null
    skip_connection: null
    nblocks: null
  training_params:
    lr_ld: 0.001
    loss_fn_tr: weighted
    loss_fn_va: weighted_root
    pred_ratio: 1
uncertainty_est:
  model_name: cholesky
  cfg_name: reg1
  name: ${uncertainty_est.model_name}_${uncertainty_est.cfg_name}
  ndim: ???
  need_train: false
  arch_params:
    positive_fn: softplus
    regularization: 1.0
  training_params:
    bs: 32
    lr_ue: 0.1
save_dir: results/
